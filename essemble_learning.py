# -*- coding: utf-8 -*-
"""Essemble Learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L64bjhInkBTt3IIUBfDCcotbIU-rLBNy
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

x=pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/00291/airfoil_self_noise.dat', sep="\t", names = ['Frequency','Angle of attack','Chord length','Free-stream velocity','Suction/side','Scaled/sound'])

x

"""**Check Rows & Columns Empty Cell **"""

np.where(x.applymap(lambda x:x==''))

x.describe()

plt.figure(figsize=(10,10))
sns.heatmap(x.corr() , annot=True , cmap="YlGnBu")
plt.show()

#split dataset into train and test

from sklearn.model_selection import train_test_split
train, test = train_test_split(x, test_size=0.3, random_state=0)

x_train=train.drop('Frequency',axis=1)
y_train=train['Frequency']

x_test=test.drop('Frequency',axis=1)
y_test=test['Frequency']

print(train)
print(test)

print(x_train.shape)
print(y_train.shape)
print(x_test.shape)
print(y_test.shape)

x_train=pd.get_dummies(x_train)
x_test=pd.get_dummies(x_test)

print(x_train.shape)
print(y_train.shape)
print(x_test.shape)
print(y_test.shape)

from sklearn.ensemble import BaggingClassifier
from sklearn import tree
model = BaggingClassifier(tree.DecisionTreeClassifier(random_state=1))
model.fit(x_train, y_train)
model.score(x_test,y_test)

from sklearn.ensemble import BaggingRegressor
model = BaggingRegressor(tree.DecisionTreeRegressor(random_state=1))
model.fit(x_train, y_train)
model.score(x_test,y_test)

from sklearn.ensemble import AdaBoostClassifier
model = AdaBoostClassifier(random_state=1)
model.fit(x_train, y_train)
model.score(x_test,y_test)

from sklearn.ensemble import AdaBoostRegressor
model = AdaBoostRegressor()
model.fit(x_train, y_train)
model.score(x_test,y_test)